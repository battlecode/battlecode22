apply plugin: 'java'

sourceCompatibility = 1.8

sourceSets {
  main {
    java.srcDirs = ["src/main"]
    resources.srcDirs = ["src/main"]

    java.destinationDirectory.set(file("$buildDir/classes"))
    output.resourcesDir = "$buildDir/classes"
  }
  test {
    java.srcDirs = ["src/test"]
    resources.srcDirs = ["src/test"]

    java.destinationDirectory.set(file("$buildDir/tests"))
    output.resourcesDir = "$buildDir/tests"
  }
}

repositories {
  mavenCentral()
  // Java Spatial Index for RTree
  maven {url "https://oss.sonatype.org/content/repositories/snapshots/"}
  maven {url "https://mvnrepository.com/artifact/net.sf.trove4j/trove4j"}
}

dependencies {
  implementation(
    [group: 'org.slf4j', name: 'slf4j-api', version: '2.0.6'],
    [group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.6'],
    [group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'],
    [group: 'commons-cli', name: 'commons-cli', version: '1.5.0'],
    [group: 'commons-io', name: 'commons-io', version: '2.11.0'],

    [group: 'org.ow2.asm', name: 'asm', version: '5.0.4'],
    [group: 'org.ow2.asm', name: 'asm-tree', version: '5.0.4'],

    // Flatbuffers
    [group: 'com.google.flatbuffers', name: 'flatbuffers-java', version: '1.11.0'],

    // Websockets
    [group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.0'],

    // We only use WeakIdentityHashMap which doesn't depend on anything
    [group: 'org.hibernate', name: 'hibernate-search', version: '3.1.0.GA'],

    // Java Spatial Index, RTree indexing
    [group: 'net.sf.jsi', name: 'jsi', version: '1.1.0-SNAPSHOT'],
    [group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'],

    // Javadoc manipulation libraries
    files(System.getenv('JAVA_HOME') + '/lib/tools.jar')
  )

  testImplementation(
    [group: 'junit', name: 'junit', version: '4.13.2'],
    [group: 'org.mockito', name: 'mockito-core', version: '3.12.4']
  )
}

jar {
  duplicatesStrategy 'exclude'
  from {
    configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
  }
}

javadoc {
  includes = ["**/common/**"]
  options.windowTitle = "Battlecode 2022"
  options.classpath = sourceSets.main.compileClasspath as List
  options.doclet = "com.sun.tools.doclets.standard.Standard"
  options.taglets = ["battlecode.doc.CostlyMethodTaglet", "battlecode.doc.RobotTypeTaglet"]
  options.tagletPath = ( sourceSets.main.output.classesDirs as List )+ sourceSets.main.compileClasspath
}
